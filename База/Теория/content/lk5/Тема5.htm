<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="Тема5.files/filelist.xml">
<title>Тема-5</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Бранцевич</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Бранцевич</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>4</o:TotalTime>
  <o:Created>2015-03-06T14:13:00Z</o:Created>
  <o:LastSaved>2015-03-06T14:17:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>2294</o:Words>
  <o:Characters>23062</o:Characters>
  <o:Company>БГУИР</o:Company>
  <o:Lines>823</o:Lines>
  <o:Paragraphs>603</o:Paragraphs>
  <o:CharactersWithSpaces>24753</o:CharactersWithSpaces>
  <o:Version>11.9999</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;
	mso-font-charset:204;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1073750139 0 0 159 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;
	font-weight:bold;}
h3
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:13.0pt;
	font-family:Arial;
	font-weight:bold;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-link:"Знак Знак2";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 207.65pt right 415.3pt;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:14.15pt;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyTextFirstIndent, li.MsoBodyTextFirstIndent, div.MsoBodyTextFirstIndent
	{mso-style-parent:"Основной текст";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-indent:10.5pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
p
	{mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
code
	{font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
tt
	{font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
p.a, li.a, div.a
	{mso-style-name:Заголовок;
	mso-style-parent:"";
	mso-style-next:Текст;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:1.0cm;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:11.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:Calibri;
	mso-fareast-language:EN-US;}
span.2
	{mso-style-name:"Знак Знак2";
	mso-style-locked:yes;
	mso-style-link:"Нижний колонтитул";
	mso-ansi-font-size:14.0pt;
	mso-ansi-language:RU;
	mso-fareast-language:RU;
	mso-bidi-language:AR-SA;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:21.0cm 842.0pt;
	margin:2.0cm 51.05pt 2.0cm 62.35pt;
	mso-header-margin:35.45pt;
	mso-footer-margin:39.7pt;
	mso-page-numbers:1;
	mso-title-page:yes;
	mso-even-footer:url("Тема5.files/header.htm") ef1;
	mso-footer:url("Тема5.files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=RU style='tab-interval:35.4pt'>

<div class=Section1>

<h3 style='text-indent:35.4pt'><a name="_Toc215646297"><span style='text-transform:
uppercase;mso-no-proof:yes'>5.1 </span><span style='mso-no-proof:yes'>Потоки в
ОС </span></a><span style='mso-bookmark:_Toc215646297'><span lang=EN-US
style='mso-ansi-language:EN-US;mso-no-proof:yes'>UNIX</span></span><span
style='mso-no-proof:yes'><o:p></o:p></span></h3>

<p class=MsoBodyTextIndent style='margin:0cm;margin-bottom:.0001pt'><span
style='mso-no-proof:yes'><span style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p class=MsoBodyTextIndent style='margin:0cm;margin-bottom:.0001pt'><span
style='mso-no-proof:yes'><span style='mso-tab-count:1'>          </span></span><span
style='mso-bidi-font-size:14.0pt;mso-no-proof:yes'>5.1.1 Различие между процессами
и потокам<o:p></o:p></span></p>

<p class=MsoBodyTextIndent style='margin:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='mso-bidi-font-size:14.0pt'><span style='mso-tab-count:
1'>          </span><o:p></o:p></span></p>

<p class=MsoBodyTextIndent style='margin:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='mso-bidi-font-size:14.0pt'><span style='mso-tab-count:
1'>          </span>С помощью процессов можно организовать параллельное
выполнение программ. Для этого процессы размножаются вызовами </span><span
class=SpellE><tt><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>fork</span></tt></span><span
style='mso-bidi-font-size:14.0pt'>(), а затем между ними организуется
взаимодействие с помощью средствами <span class=SpellE>межпроцессного</span>
взаимодействия.<span style='mso-no-proof:yes'><o:p></o:p></span></span></p>

<p class=MsoBodyTextFirstIndent style='margin-bottom:0cm;margin-bottom:.0001pt;
text-align:justify;text-indent:0cm'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Для организации параллельного
выполнения и взаимодействия процессов можно использовать механизм <span
class=SpellE>многопоточности</span>. Основной единицей здесь является
поток.<span style='mso-spacerun:yes'>  </span>Поток представляет собой
облегченную версию процесса. Основные характеристики процесса следующие.<o:p></o:p></span></p>

<p class=MsoBodyTextFirstIndent style='margin-bottom:0cm;margin-bottom:.0001pt;
text-align:justify;text-indent:0cm'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>1. Процесс располагает определенными
ресурсами. Он размещен в некотором виртуальном адресном пространстве,
содержащем образ этого процесса. Кроме того, процесс управляет другими
ресурсами (файлы, устройства ввода / вывода и т.д.). <o:p></o:p></span></p>

<p class=MsoBodyTextFirstIndent style='margin-bottom:0cm;margin-bottom:.0001pt;
text-align:justify;text-indent:0cm'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>2. Процесс подвержен диспетчеризации.
Он определяет порядок выполнения одной или нескольких программ, при этом
выполнение может перекрываться другими процессами. Каждый процесс имеет
состояние выполнения и приоритет диспетчеризации. <o:p></o:p></span></p>

<p class=MsoBodyText style='margin-bottom:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Если
рассматривать эти характеристики независимо друг от друга (как это принято в
современной теории ОС), то: <o:p></o:p></span></p>

<p class=MsoBodyText style='margin-bottom:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>1)
владельцу ресурса, обычно называемому процессом или задачей, <span class=GramE>присущи</span>:
<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- виртуальное адресное
пространство; <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- индивидуальный доступ
к процессору, другим процессам, файлам, и ресурсам ввода – вывода; <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span><span class=GramE>2)
модулю для диспетчеризации, обычно называемому потоком или облегченным
процессом, присущи: </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- состояние выполнения
(активное, готовность и т.д.); <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- сохранение контекста
потока в неактивном состоянии; <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- стек выполнения и
некоторая статическая память для локальных переменных; <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- доступ к пространству
памяти и ресурсам своего процесса. <o:p></o:p></span></p>

<p class=MsoBodyText style='margin-bottom:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Все
потоки процесса разделяют общие ресурсы. Изменения, вызванные одним потоком, <span
class=GramE>становятся немедленно доступны</span> другим. <o:p></o:p></span></p>

<p class=MsoBodyText style='margin-bottom:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>При
корректной реализации потоки имеют определенные преимущества перед процессами.
Им требуется: <o:p></o:p></span></p>

<p class=MsoBodyText style='margin-bottom:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>-
меньше времени для создания нового потока, поскольку создаваемый поток
использует адресное пространство текущего процесса; <o:p></o:p></span></p>

<p class=MsoBodyText style='margin-bottom:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>-
меньше времени для завершения потока; <o:p></o:p></span></p>

<p class=MsoBodyText style='margin-bottom:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>-
меньше времени для переключения между двумя потоками в пределах процесса; <o:p></o:p></span></p>

<p class=MsoBodyText style='margin-bottom:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>-
меньше коммуникационных расходов, поскольку потоки разделяют все ресурсы, и в
частности адресное пространство. Данные, продуцируемые одним из потоков,
немедленно становятся доступными всем другим потокам.<o:p></o:p></span></p>

<p class=MsoBodyText style='margin-bottom:0cm;margin-bottom:.0001pt;text-align:
justify'><span style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span><span
style='mso-no-proof:yes'>Так как ОС UNIX является многозадачной системой, то в
ходе работы несколько<span style='mso-spacerun:yes'>  </span>процессов могут
конкурировать между собой за доступ к различным ресурсам. Для<span
style='mso-spacerun:yes'>  </span>справедливого распределения ресурсов (память,
дисковое пространство) каждому из процессов устанавливается индивидуальный
набор ограничений.</span><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><span
style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt;mso-no-proof:yes'><span
style='mso-tab-count:1'>          </span>5.1.2 Преимушества многопоточности<o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='mso-tab-count:1'>            </span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='mso-tab-count:1'>            </span><span style='font-size:14.0pt'>Если
операционная система поддерживает концепции потоков в рамках одного процесса,
она называется многопоточной. Многопоточные приложения имеют ряд преимуществ. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>1.
Улучшенная реакция приложения - любая программа, содержащая много не зависящих
друг от друга действий, может быть перепроектирована так, чтобы каждое действие
выполнялось в отдельном потоке. Например, пользователь многопоточного интерфейса
не должен ждать завершения одной задачи, чтобы начать выполнение другой. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>2.
Более эффективное использование мультипроцессирования - как правило,
приложения, реализующие параллелизм через потоки, не должны учитывать число
доступных процессоров. Производительность приложения равномерно увеличивается
при наличии дополнительных процессоров. Численные алгоритмы и приложения с
высокой степенью параллелизма, <span class=GramE>например</span> перемножение
матриц, могут выполняться намного быстрее.<o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>3.
Улучшенная структура программы - некоторые программы более эффективно
представляются в виде нескольких независимых или полуавтономных единиц, чем в
виде единой монолитной программы. Многопоточные программы легче адаптировать к
изменениям требований пользователя. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>4.
Эффективное использование ресурсов системы - программы, использующие два или
более процессов, которые имеют доступ к общим данным через разделяемую память,
содержат более одного потока управления. При этом каждый процесс имеет полное
адресное пространство и состояние в операционной системе. Стоимость создания и
поддержания большого количества служебной информации делает каждый процесс
более затратным, чем поток. Кроме того, разделение работы между процессами
может потребовать от программиста значительных усилий, чтобы обеспечить связь
между потоками в различных процессах или синхронизировать их действия. <a
name=SECTION02830000000000000000><o:p></o:p></a></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='mso-bookmark:SECTION02830000000000000000'><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='mso-bookmark:SECTION02830000000000000000'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span><span style='mso-no-proof:yes'>5.1.3 </span>Уровни
потоков</span></span><span style='font-size:14.0pt'> <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Существует
две основных категории потоков с точки зрения реализации: <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- пользовательские
потоки, которые реализуются через специальные библиотеки потоков; <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- потоки уровня ядра,
которые реализуются через системные вызовы. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>Каждый уровень имеет
свои достоинства и недостатки. Некоторые операционные системы позволяют
реализовать потоки обоих уровней. <a name=SECTION02831000000000000000><o:p></o:p></a></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bookmark:SECTION02831000000000000000'><span
style='mso-bidi-font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Пользовательские
потоки</span></span><span style='mso-bidi-font-size:14.0pt'>. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>При
использовании этого уровня ядро не знает о существовании потоков - все
управление потоками реализуется приложением с помощью специальных библиотек.
Переключение потоков не требует привилегий режима ядра, а планирование
полностью зависит от приложения. При этом ядро управляет деятельностью процесса.
Если поток вызывает системную функцию, то будет блокирован весь процесс, но для
поточной библиотеки этот поток будет находиться в активном состоянии. Здесь
состояние потока не зависит от состояния процесса. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Преимущества
пользовательских потоков в следующем: <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- переключение потоков
не требует участия ядра - нет переключения из режима задачи в режим ядра; <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- планирование может
определяться приложением - при этом выбирается наилучший алгоритм; <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- пользовательские
потоки могут применяться в любой ОС - необходимо лишь наличие совместимой
библиотеки потоков. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>Недостатки
пользовательских потоков: <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- большинство системных
вызовов является <span class=GramE>блокирующими</span> и ядро блокирует
процессы - включая все потоки в пределах процесса; <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- ядро может направлять
на процессоры только процессы - два потока в пределах одного и того же процесса
не могут выполняться одновременно на двух разных процессорах. <o:p></o:p></span></p>

<p class=MsoNormal><a name=SECTION02832000000000000000><span style='mso-tab-count:
1'>          </span></a></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION02832000000000000000'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION02832000000000000000'><span
style='mso-tab-count:1'>          </span>Потоки уровня ядра</span>.</p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>На этом
уровне все управление потоком выполняется ядром. Используется программный
интерфейс приложения (системные вызовы) для работы с потоками уровня ядра. Ядро
поддерживает информацию о контексте процесса и потоков; переключение потоков
требует выполнения дисциплины планирования ядра на уровне этих потоков. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Преимущества
потоков уровня ядра: <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- ядро может
одновременно планировать выполнение нескольких потоков одного процесса на
нескольких процессорах, блокирование выполняется на уровне потока; <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- процедуры ядра могут
быть многопоточными. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>Недостатки: <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>- переключение потоков в
пределах одного процесса требует участия ядра. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Основной
библиотекой для реализации пользовательских потоков является библиотека потоков
POSIX, которая называется </span><span class=SpellE><tt><span style='font-size:
14.0pt'>pthreads</span></tt></span><span style='font-size:14.0pt'>.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><a name=SECTION02840000000000000000><span style='mso-tab-count:
1'>          </span><span style='mso-no-proof:yes'>5.1.4 </span>Создание потока</a>
</p>

<p><span style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Функция
</span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_create</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> позволяет добавить новый поток управления к текущему
процессу. Прототип функции: <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:36.0pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>pthread</span></span></i><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>_</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>create</span></i><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>(</span></i><span class=SpellE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>pthread_t</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:
EN-US'>&nbsp;*<span class=SpellE>tid</span>,<span style='mso-spacerun:yes'> 
</span>const&nbsp;<span class=SpellE>pthread_attr_t</span>&nbsp;*<span
class=SpellE>tattr</span>, void*(*<span class=SpellE>start_routine</span>)(void&nbsp;*),&nbsp;void&nbsp;*<span
class=SpellE>arg</span>); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span><span style='mso-bidi-font-size:
14.0pt'>Когда атрибуты объекта не определены, они равны </span><tt><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>NULL</span></tt><span
style='mso-bidi-font-size:14.0pt'>, и поток, создаваемый по умолчанию, имеет
следующие признаки: <span class=SpellE>неорганиченность</span>, <span
class=SpellE>неотделенность</span> от процесса, стек с размером по умолчанию,
приоритет родителя. Существует возможность также создать объект атрибутов
потока с помощью функции </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>pthread_attr_init</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'>, а затем использовать этот объект для
создания самого потока. Пример создания потока: <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:36.0pt'><span style='mso-bidi-font-size:
14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:1.0cm'><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>#<span class=SpellE>include</span>&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><span class=SpellE><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_attr_t</span></i></span><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>&nbsp;<span class=SpellE>tattr</span>; <o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><span class=SpellE><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>pthread_t</span></i></span></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;<span
class=SpellE>tid</span>; <o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><span class=GramE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>extern</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;void&nbsp;*<span class=SpellE>start_routine</span>(void&nbsp;*<span
class=SpellE>arg</span>); <o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><span class=SpellE><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>void</span></i></span><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>&nbsp;*<span class=SpellE>arg</span>; <o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><span class=SpellE><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>int</span></i></span><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>&nbsp;<span class=SpellE>ret</span>; <o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>/*&nbsp;поведение&nbsp;по&nbsp;умолчанию*/ <o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><span class=GramE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>ret</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span class=SpellE>pthread_create</span>(&amp;<span
class=SpellE>tid</span>,&nbsp;NULL,&nbsp;<span class=SpellE>start_routine</span>,&nbsp;<span
class=SpellE>arg</span>); <o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>/*&nbsp;инициализация&nbsp;с&nbsp;атрибутами&nbsp;по&nbsp;умолчанию&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><span class=GramE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>ret</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span class=SpellE>pthread_attr_init</span>(&amp;<span
class=SpellE>tattr</span>); <o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>/*&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>определение</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>поведения</span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>по</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>умолчанию</span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>*/ <o:p></o:p></span></i></p>

<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:1.0cm;
margin-bottom:.0001pt'><span class=GramE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>ret</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span class=SpellE>pthread_create</span>(&amp;<span
class=SpellE>tid</span>,&nbsp;&amp;<span class=SpellE>tattr</span>,&nbsp;<span
class=SpellE>start_routine</span>,&nbsp;<span class=SpellE>arg</span>); </span></i><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span><span style='font-size:14.0pt'>Функция
</span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_create</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> вызывается с атрибутом </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>attr</span></i></tt></span><span
style='font-size:14.0pt'>, определяющим необходимое поведение; </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>start_routine</span></i></tt></span><span style='font-size:14.0pt'> -
это функция, с которой новый поток начинает свое выполнение. Когда <i
style='mso-bidi-font-style:normal'><span style='mso-spacerun:yes'> </span></i></span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>start_routine</span></i></tt></span><span style='font-size:14.0pt'>
завершается, поток завершается со статусом выхода, установленным в значение,
возвращенное </span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>start_routine</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>.</span></i><span
style='font-size:14.0pt'> <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Если
вызов </span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_create</span></i></tt></span><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i></tt><span
style='font-size:14.0pt'> успешно завершен, идентификатор созданного потока
сохраняется по адресу<i style='mso-bidi-font-style:normal'> </i></span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>tid</span></i></tt></span><span style='font-size:14.0pt'>. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='mso-tab-count:1'>            </span><span style='font-size:14.0pt'>Создание
потока с использованием аргумента атрибутов <tt><span style='mso-ansi-font-size:
14.0pt;mso-bidi-font-size:14.0pt;font-family:"Times New Roman"'>NULL</span></tt>
оказывает тот же эффект, что и использование атрибута по умолчанию: оба создают
одинаковый поток. При инициализации <span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='mso-ansi-font-size:14.0pt;mso-bidi-font-size:14.0pt;
font-family:"Times New Roman"'>tattr</span></i></tt></span> он обретает
поведение по умолчанию; <span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='mso-ansi-font-size:14.0pt;mso-bidi-font-size:14.0pt;
font-family:"Times New Roman"'>pthread_create</span></i></tt></span><i
style='mso-bidi-font-style:normal'>()</i> возвращает 0 при успешном завершении.
Любое другое значение указывает, что произошла ошибка. <a
name=SECTION02850000000000000000><o:p></o:p></a></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION02850000000000000000'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION02850000000000000000'><span
style='mso-tab-count:1'>          </span><span style='mso-no-proof:yes'>5.1.5 </span>Ожидание
завершения потока</span> </p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Функция </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_join</span></i></tt></span><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i></tt><span
style='font-size:14.0pt'> используется для ожидания завершения потока: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><span
style='mso-tab-count:1'>          </span></span><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>pthread</span></span></i><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>_</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>join</span></i><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>(</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>thread</span></i><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>_</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>t&nbsp;<span class=SpellE>tid</span></span></i><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>,</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;void&nbsp;</span></i><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>**</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>status</span></i><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>); <o:p></o:p></span></i></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Пример использования функции: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><span
style='mso-tab-count:1'>          </span><i style='mso-bidi-font-style:normal'>#<span
class=SpellE>include</span>&nbsp;&lt;<span class=SpellE>pthread.h</span>&gt; <o:p></o:p></i></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span></span></i><span
class=SpellE><span class=GramE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>tid</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span><span class=SpellE><span class=GramE>int</span></span>&nbsp;ret;
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span></i><span class=SpellE><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>int</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>&nbsp;<span
class=SpellE>status</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>/*&nbsp;ожидание&nbsp;завершения&nbsp;потока&nbsp;&quot;<span
class=SpellE>tid</span>&quot;&nbsp;со&nbsp;статусом&nbsp;<span class=SpellE>status</span>&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span></span></i><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>ret</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span class=SpellE>pthread_join</span>(<span
class=SpellE>tid</span>,&nbsp;&amp;status); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span></i><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>/*&nbsp;ожидание&nbsp;завершения&nbsp;потока&nbsp;&quot;<span
class=SpellE>tid</span>&quot;&nbsp;без&nbsp;статуса&nbsp;*/ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span></span></i><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>ret</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span class=SpellE>pthread_join</span>(<span
class=SpellE>tid</span>,&nbsp;NULL); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
14.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span><span style='font-size:14.0pt'>Функция
</span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_join</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> блокирует вызывающий поток, пока указанный поток не
завершится. Указанный поток должен принадлежать текущему процессу и не должен
быть отделен. Если </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>status</span></i></tt></span><span
style='font-size:14.0pt'> не равен </span><tt><span style='font-size:14.0pt'>NULL</span></tt><span
style='font-size:14.0pt'>, он указывает на переменную, которая принимает
значение статуса выхода завершенного потока при успешном завершении </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>pthread_join</span></i></tt></span><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>()</span></i><span style='font-size:14.0pt'>.
Несколько потоков не могут ждать завершения одного и того же потока. Если они
пытаются выполнить это, один поток завершается успешно, а все остальные - с
ошибкой </span><tt><span style='font-size:14.0pt'>ESRCH</span></tt><span
style='font-size:14.0pt'>. После завершения </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_join</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'>, любое пространство стека, связанное с потоком, может
быть использовано приложением.<o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>В
следующем примере один поток верхнего уровня вызывает процедуру, которая
создает новый вспомогательный поток, выполняющий сложный поиск в базе данных,
требующий определенных затрат времени. Главный поток ждет результатов поиска, и
в то же время может выполнять другую работу. Он ждет своего помощника с помощью
функции </span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_join</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'>. Аргумент<i style='mso-bidi-font-style:normal'> </i></span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>pbe</span></i></tt></span><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'> </span></i><span style='font-size:14.0pt'>является
параметром стека для нового потока. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Исходный код для </span><span
class=SpellE><tt><span style='font-size:14.0pt'>thread.c</span></tt></span><span
style='font-size:14.0pt'>: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>void</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;mainline&nbsp;(...) <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>{ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE><span class=GramE>struct</span></span>&nbsp;<span class=SpellE>phonebookentry</span>&nbsp;*<span
class=SpellE>pbe</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE><span class=GramE>pthread_attr_t</span></span>&nbsp;<span
class=SpellE>tattr</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE><span class=GramE>pthread_t</span></span>&nbsp;helper; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE><span class=GramE>int</span></span>&nbsp;status; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE>pthread_<span class=GramE>create</span></span><span class=GramE>(</span>&amp;helper,&nbsp;NULL,&nbsp;fetch,&nbsp;&amp;<span
class=SpellE>pbe</span>); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>/*&nbsp;выполняет&nbsp;собственную&nbsp;задачу&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>&nbsp;&nbsp;<span class=SpellE>pthread_join</span>(<span
class=SpellE>helper</span>,&nbsp;&amp;<span class=SpellE>status</span>); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>&nbsp;&nbsp;/*&nbsp;теперь&nbsp;можно&nbsp;использовать&nbsp;результат&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>} <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>void</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;fetch(<span
class=SpellE>struct</span>&nbsp;<span class=SpellE>phonebookentry</span>&nbsp;*<span
class=SpellE>arg</span>) <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>{ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE><span class=GramE>struct</span></span>&nbsp;<span class=SpellE>phonebookentry</span>&nbsp;*<span
class=SpellE>npbe</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;/*&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>ищем</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>значение</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>в</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>базе</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>данных</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;*/ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE><span class=GramE>npbe</span></span>&nbsp;=&nbsp;search&nbsp;(<span
class=SpellE>prog_name</span>) <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=GramE>if</span>&nbsp;(<span class=SpellE>npbe</span>&nbsp;!=&nbsp;NULL) <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<span
class=SpellE>arg</span>&nbsp;=&nbsp;*<span class=SpellE>npbe</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE>pthread_<span class=GramE>exit</span></span><span class=GramE>(</span>0);
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>} <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>struct</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>phonebookentry</span>&nbsp;{ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=GramE>char</span>&nbsp;name[64]; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=GramE>char</span>&nbsp;<span class=SpellE>phonenumber</span>[32]; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;</span></i><span
class=SpellE><i style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>char</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>&nbsp;<span
class=SpellE>flags</span>[16]; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>} <o:p></o:p></span></i></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><a name=SECTION02860000000000000000><span style='mso-no-proof:
yes'><span style='mso-tab-count:1'>          </span>5.1.6 </span>Отделение
потока</a> </p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:2'>                    </span><o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Функция </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_detach</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> применяется как альтернатива<span
style='mso-spacerun:yes'>  </span></span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_join</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'>, чтобы утилизировать область памяти для потока,
который был создан с атрибутом </span><span class=SpellE><tt><span
style='font-size:14.0pt'>detachstate</span></tt></span><span style='font-size:
14.0pt'>, установленным в значение </span><tt><span style='font-size:14.0pt'>PTHREAD_CREATE_JOINABLE</span></tt><span
style='font-size:14.0pt'>. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Прототип</span><span style='font-size:
14.0pt;mso-ansi-language:EN-US'> </span><span style='font-size:14.0pt'>функции</span><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><span style='mso-tab-count:2'>                    </span><span
class=SpellE><span class=GramE><i style='mso-bidi-font-style:normal'>int</i></span></span><i
style='mso-bidi-font-style:normal'>&nbsp;<span class=SpellE>pthread_detach</span>(<span
class=SpellE>thread_t</span>&nbsp;<span class=SpellE>tid</span>); <o:p></o:p></i></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><span style='mso-tab-count:1'>          </span></span><span
style='mso-bidi-font-size:14.0pt'>Пример вызова функции: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>#<span class=SpellE>include</span>&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>tid</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>/*&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>отделить</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>поток</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;<span
class=SpellE>tid</span>&nbsp;*/ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_detach</span>(<span class=SpellE>tid</span>); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span>Функция <span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_detach</span></i></tt></span><i style='mso-bidi-font-style:
normal'>()</i> используется, чтобы указать библиотеке потоков, что выделенная
память для потока <span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>tid</span></i></tt></span><i
style='mso-bidi-font-style:normal'> </i>может быть утилизирована, когда поток завершится.
Если <span class=SpellE><tt><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>tid</span></tt></span> не закончился, <span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_detach</span></i></tt></span><i style='mso-bidi-font-style:
normal'>()</i> не ускоряет его завершения и возвращает 0 при успешном
завершении. Любое другое значение указывает, что произошла ошибка.<a
name=SECTION02870000000000000000><b style='mso-bidi-font-weight:normal'><span
style='mso-tab-count:1'>    </span></b></a><span style='mso-bookmark:SECTION02870000000000000000'><span
style='mso-bidi-font-size:14.0pt'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION02870000000000000000'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION02870000000000000000'><span
style='mso-tab-count:1'>          </span><span style='mso-no-proof:yes'>5.1.7 </span>Работа
с ключами потока</span> </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Однопоточные
программы на C содержат два основных класса данных: локальные и глобальные. Для
многопоточных программ на C добавляется третий класс: данные потока. Они похожи
на глобальные данные, за исключением того, что они являются собственными для
потока. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Данные
потока являются единственным способом определения и обращения к данным, которые
принадлежат отдельному потоку. Каждый элемент данных потока связан с ключом,
который является глобальным для всех потоков процесса. Используя ключ, поток
может получить доступ к указателю (</span><span class=SpellE><tt><span
style='font-size:14.0pt'>void</span></tt></span><span style='font-size:14.0pt'>
*), который поддерживается только для этого потока. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Функция
</span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_keycreate</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> применяется для выделения ключа, который используется
при идентификации данных некоторого потока в составе процесса. Ключ для всех
потоков общий, и все потоки вначале содержат значение ключа </span><tt><span
style='font-size:14.0pt'>NULL</span></tt><span style='font-size:14.0pt'>.
Отдельно для каждого ключа перед его использованием вызывается </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>pthread_keycreate</span></i></tt></span><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>()</span></i><span style='font-size:
14.0pt'>. При этом не происходит никакой синхронизации. Как только ключ будет
создан, каждый поток может связать с ним свое значение. Значения являются
специфичными для потока и поддерживаются для каждого из них независимо. Связь
ключа с потоком удаляется, когда поток заканчивается, при этом ключ должен быть
создан с функцией деструктора. Прототип</span><span style='font-size:14.0pt;
mso-ansi-language:EN-US'> </span><span style='font-size:14.0pt'>функции</span><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>pthread_key_create</span>(<span
class=SpellE>pthread_key_t</span>&nbsp;*key,<span style='mso-spacerun:yes'> 
</span>void(*destructor)(void&nbsp;*)); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'>Пример использования<span
class=GramE>:.</span><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>#</span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:
EN-US'>include&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>&lt;</span></i><span class=SpellE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>pthread</span></i></span><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>.</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>h</span></i><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_key_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;key; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>/*&nbsp;создание&nbsp;ключа&nbsp;без&nbsp;деструктора&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>=</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>pthread</span></span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>_</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>key</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>_</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>create</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>(&amp;</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>key</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>,</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;NULL</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>/*&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>создание</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>ключа</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>с</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>деструктором</span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_key_create</span>(&amp;key,&nbsp;destructor); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span><span style='mso-bidi-font-size:
14.0pt'>Если </span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>pthread_keycreate</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'> завершается успешно, то выделенный ключ
будет сохранен в переменной<i style='mso-bidi-font-style:normal'> </i></span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>key</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'>. Вызывающий процесс должен гарантировать,
что хранение и доступ к этому ключу <span class=GramE>синхронизированы</span>.
Чтобы освободить ранее выделенную память, может использоваться дополнительная
функция удаления - деструктор. Если ключ имеет непустой указатель на функцию
деструктора, и поток имеет непустое значение ключа, функция деструктора
вызывается для значения, связанного с потоком, после его завершения. Порядок, в
котором вызываются функции деструктора, может быть произвольным;<i
style='mso-bidi-font-style:normal'> </i></span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_keycreate</span></i></tt></span><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'> возвращает 0 при успешном завершении, или
любое другое значение при возникновении ошибки. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>Функция </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>pthread_keydelete</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>() </span></i><span
style='mso-bidi-font-size:14.0pt'>используется, чтобы уничтожить существующий
ключ данных для определенного потока. Любая выделенная память, связанная с
ключом, может быть освобождена, потому что ключ был удален; попытка ссылки на
эту память вызовет ошибку. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Прототип</span><span style='font-size:
14.0pt;mso-ansi-language:EN-US'> </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>pthread_keydelete</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>()</span></i><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><span style='mso-tab-count:1'>          </span><span
class=SpellE><span class=GramE><i style='mso-bidi-font-style:normal'>int</i></span></span><i
style='mso-bidi-font-style:normal'>&nbsp;<span class=SpellE>pthread_key_delete</span>(<span
class=SpellE>pthread_key_t</span>&nbsp;key); <o:p></o:p></i></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><span style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><span style='mso-tab-count:1'>          </span></span><span
style='mso-bidi-font-size:14.0pt'>Пример использования функции: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>#</span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:
EN-US'>include&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>&lt;</span></i><span class=SpellE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>pthread</span></i></span><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>.</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>h</span></i><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_key_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;key; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>/*&nbsp;key&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>был</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>создан</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>ранее</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;*/ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_key_delete</span>(key); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-tab-count:1'>          </span></span><span
style='mso-bidi-font-size:14.0pt'>Как</span><span style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'> </span><span style='mso-bidi-font-size:14.0pt'>только</span><span
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'> </span><span
style='mso-bidi-font-size:14.0pt'>ключ</span><span style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'> </span><span style='mso-bidi-font-size:14.0pt'>удален</span><span
lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>, </span><span
style='mso-bidi-font-size:14.0pt'>любая</span><span style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'> </span><span style='mso-bidi-font-size:14.0pt'>ссылка</span><span
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'> </span><span
style='mso-bidi-font-size:14.0pt'>на</span><span style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'> </span><span style='mso-bidi-font-size:14.0pt'>него</span><span
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'> </span><span
style='mso-bidi-font-size:14.0pt'>через</span><span style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'> </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>pthread_setspecific</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>()</span></i><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'> </span><span style='mso-bidi-font-size:14.0pt'>или</span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'> </span></i><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>pthread_getspecific</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>()</span></i><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'> </span><span style='mso-bidi-font-size:14.0pt'>приводит</span><span
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'> </span><span
style='mso-bidi-font-size:14.0pt'>к</span><span style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'> </span><span style='mso-bidi-font-size:14.0pt'>ошибке</span><span
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'> </span><tt><span
lang=EN-US style='font-size:10.0pt;mso-bidi-font-size:14.0pt;mso-ansi-language:
EN-US'>EINVAL</span></tt><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'>.<span style='mso-spacerun:yes'>  </span></span><span
style='mso-bidi-font-size:14.0pt'>Программист должен сам освобождать любые
выделенные потоку ресурсы перед вызовом функции удаления. Эта функция не
вызывает деструктора; </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>pthread_keydelete</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'> возвращает 0 - после успешного завершения -
или любое другое значение - в случае ошибки.<span style='mso-spacerun:yes'> 
</span>Функция </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>pthread_setspecific</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'> используется, чтобы установить связку между
потоком и указанным ключом данных для потока. Прототип</span><span
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'> </span><span
style='mso-bidi-font-size:14.0pt'>функции</span><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>pthread_setspecific</span>(<span
class=SpellE>pthread_key_t</span>&nbsp;key,<span style='mso-spacerun:yes'> 
</span>const&nbsp;void&nbsp;*value); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'>Пример</span><span
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'> </span><span
style='mso-bidi-font-size:14.0pt'>вызова</span><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_key_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;key; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>void</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;*value;
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>/*&nbsp;key&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>был</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>создан</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>ранее</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;*/ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_setspecific</span>(key,&nbsp;value); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><span style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span><span style='mso-bidi-font-size:
14.0pt'>Функция </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>pthread_setspecific</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'> возвращает 0 - после успешного завершения -
или любое другое значение - в случае ошибки; она не освобождает память для хранения
ключа. Если установлена новая привязка значения ключа, предыдущая привязка
должна быть освобождена; иначе может произойти утечка памяти. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Чтобы
получить привязку ключа для вызывающего потока, используется функция </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>pthread_getspecific</span></i></tt></span><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>().</span></i><span style='font-size:
14.0pt'> Полученное значение сохраняется в переменной </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>value</span></i></tt></span><span style='font-size:14.0pt'>.<o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'>Прототип функции: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><span
style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><span
style='mso-tab-count:1'>          </span><span class=SpellE><i
style='mso-bidi-font-style:normal'>int</i></span><i style='mso-bidi-font-style:
normal'>&nbsp;<span class=SpellE>pthread_getspecific</span>(<span class=SpellE>pthread_key_t</span>&nbsp;<span
class=SpellE>key</span>); <o:p></o:p></i></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'>Пример</span><span
lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_key_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;key; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>void</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>&nbsp;*<span
class=SpellE>value</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>/*&nbsp;<span class=SpellE>key</span>&nbsp;был&nbsp;создан&nbsp;ранее&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>value</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_getspecific</span>(key); <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>Рассмотрим</span></i><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'> </span></i><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>следующий</span></i><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'> </span></i><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>код</span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:
EN-US'>: <o:p></o:p></span></i></p>

<p class=MsoNormal><span class=GramE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>body(</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>)&nbsp;{ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;... <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=GramE>while</span>&nbsp;(write(<span class=SpellE>fd</span>,&nbsp;buffer,&nbsp;size)&nbsp;==&nbsp;-1)&nbsp;{
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;&nbsp;&nbsp;<span
class=GramE>if</span>&nbsp;(<span class=SpellE>errno</span>&nbsp;!=&nbsp;EINTR)&nbsp;{
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span
class=SpellE><span class=GramE>fprintf</span></span><span class=GramE>(</span><span
class=SpellE>mywindow</span>,&nbsp;&quot;%s\n&quot;,&nbsp;<span class=SpellE>strerror</span>(<span
class=SpellE>errno</span>)); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></i><span
class=SpellE><i style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>exit</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>(1); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;} <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>&nbsp;&nbsp;} <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>&nbsp;&nbsp;... <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>} <o:p></o:p></span></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></i></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>Этот код может быть выполнен
любым числом потоков, но он содержит ссылки на две глобальных переменных, </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>errno</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'> и </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>mywindow</span></i></tt></span><span style='mso-bidi-font-size:14.0pt'>,
которые должны быть ссылками на объекты, являющиеся частными для каждого
потока. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Ссылки
на </span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>errno</span></i></tt></span><span style='font-size:
14.0pt'> должны получить код системной ошибки из процедуры, вызванной именно
этим конкретным потоком, и никаким другим. Поэтому ссылки на </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>errno</span></i></tt></span><span style='font-size:14.0pt'> в одном
потоке относятся к иной области памяти, чем ссылки на </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>errno</span></i></tt></span><span style='font-size:14.0pt'> в других
потоках. Переменная </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>mywindow</span></i></tt></span><span
style='font-size:14.0pt'> предназначена для обращения к потоку </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>stdio</span></i></tt></span><span style='font-size:14.0pt'>, связанному
с окном, которое является частным объектом потока. Так же, как и </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>errno</span></i></tt></span><span style='font-size:14.0pt'>, ссылки на </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>mywindow</span></i></tt></span><span style='font-size:14.0pt'> в одном
потоке должны обращаться к отдельной конкретной области памяти (<span
class=GramE>и</span> в конечном счете - к различным окнам). Единственное
различие между этими переменными состоит в том, что библиотека потоков
реализует раздельный доступ для </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>errno</span></i></tt></span><span
style='font-size:14.0pt'>, а программист должен сам реализовать это для </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>mywindow</span></i></tt></span><span style='font-size:14.0pt'>.
Следующий пример показывает, как работают ссылки на </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>mywindow</span></i></tt></span><span
style='font-size:14.0pt'>. Препроцессор преобразует ссылки на </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>mywindow</span></i></tt></span><span style='font-size:14.0pt'> в вызовы
процедур </span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>mywindow</span></i></tt></span><span style='font-size:
14.0pt'>. Эта процедура в свою очередь вызывает </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_getspecific</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'>, передавая ему глобальную переменную </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>mywindow_key</span></i></tt></span><span style='font-size:14.0pt'>
(это, действительно, глобальная переменная) и выходной параметр </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>win</span></i></tt></span><span style='font-size:14.0pt'>, который
принимает идентификатор окна для этого потока. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Следующий</span><span
style='font-size:14.0pt;mso-ansi-language:EN-US'> </span><span
style='font-size:14.0pt'>фрагмент</span><span style='font-size:14.0pt;
mso-ansi-language:EN-US'> </span><span style='font-size:14.0pt'>кода</span><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><span style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=SpellE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>thread_key_t</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>mywin_key</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>FILE&nbsp;*_<span
class=SpellE><span class=GramE>mywindow</span></span><span class=GramE>(</span>void)&nbsp;{
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;FILE&nbsp;*win;
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE>pthread_<span class=GramE>getspecific</span></span><span
class=GramE>(</span><span class=SpellE>mywin_key</span>,&nbsp;&amp;win); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=GramE>return(</span>win); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>} <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>#define&nbsp;<span
class=SpellE>mywindow</span>&nbsp;_<span class=SpellE><span class=GramE>mywindow</span></span><span
class=GramE>()</span> <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>void</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;<span
class=SpellE>routine_uses_win</span>(&nbsp;FILE&nbsp;*win)&nbsp;{ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;... <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;} <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>void</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;<span
class=SpellE>thread_start</span>(...)&nbsp;{ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;... <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE>make_<span class=GramE>mywin</span></span><span class=GramE>(</span>);
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>... <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;routine</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>_</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>uses</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>_</span></i><span class=GramE><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>win</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>(</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>mywindow</span>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>) <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>... <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>} <o:p></o:p></span></i></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>Переменная </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>mywin_key</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'> определяет класс переменных, для которых
каждый поток содержит собственную частную копию; т. е. эти переменные
представляют собой данные этого потока. Каждый поток вызывает </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>make_mywin</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'>, чтобы инициализировать свое окно и
обращаться к своему экземпляру </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>mywindow</span></i></tt></span><span style='mso-bidi-font-size:14.0pt'>
для ссылки на окно. Как только эта процедура вызвана, поток может обращаться к </span><span
class=SpellE><tt><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>mywindow</span></tt></span><span
style='mso-bidi-font-size:14.0pt'> и получать ссылку на свое частное окно. При
этом ссылки на </span><span class=SpellE><tt><span style='font-size:10.0pt;
mso-bidi-font-size:14.0pt'>mywindow</span></tt></span><span style='mso-bidi-font-size:
14.0pt'> используются так, как будто они являются прямыми ссылками на частные
данные потока. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'>Теперь
можно устанавливать собственные данные потока: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>void</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>make_mywindow</span>(void)&nbsp;{
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;FILE&nbsp;**win;
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=GramE>static</span>&nbsp;<span class=SpellE>pthread_once_t</span>&nbsp;<span
class=SpellE>mykeycreated</span>&nbsp;= <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PTHREAD_ONCE_INIT;
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE>pthread_<span class=GramE>once</span></span><span class=GramE>(</span>&amp;<span
class=SpellE>mykeycreated</span>,&nbsp;<span class=SpellE>mykeycreate</span>); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=GramE>win</span>&nbsp;=&nbsp;<span class=SpellE>malloc</span>(<span
class=SpellE>sizeof</span>(*win)); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE>create_<span class=GramE>window</span></span><span class=GramE>(</span>win,&nbsp;...);
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE>pthread_<span class=GramE>setspecific</span></span><span
class=GramE>(</span><span class=SpellE>mywindow_key</span>,&nbsp;win); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>} <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>void</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;<span
class=SpellE>mykeycreate</span>(void)&nbsp;{ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;<span
class=SpellE>pthread_<span class=GramE>keycreate</span></span><span
class=GramE>(</span>&amp;<span class=SpellE>mywindow_key</span>,&nbsp;<span
class=SpellE>free_key</span>); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>} <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>void</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;<span
class=SpellE>free_key</span>(void&nbsp;*win)&nbsp;{ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;&nbsp;</span></i><span
class=SpellE><i style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>free</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>(<span
class=SpellE>win</span>); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>} <o:p></o:p></span></i></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><span
style='mso-tab-count:1'>          </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>Сначала нужно получить
уникальное значение для ключа </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>mywin_key</span></i></tt></span><span style='mso-bidi-font-size:14.0pt'>.
Этот ключ используется, чтобы идентифицировать класс данных потока. Первый
поток, который вызывает </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>make_mywin</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'>, вызывает также </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_keycreate</span></i></tt></span><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'>, который присваивает своему первому
аргументу уникальный ключ. Функция деструктора является вторым аргументом для
освобождения экземпляра определенного элемента данных в потоке, как только этот
поток завершится. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Следующий
шаг состоит в выделении памяти для элемента данных вызывающего потока. После
выделения памяти выполняется вызов процедуры </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>create_window</span></i></tt></span><span
style='font-size:14.0pt'>, устанавливающей окно для потока и выделяющей память
для переменной </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>win</span></i></tt></span><span
style='font-size:14.0pt'>, которая ссылается на окно. Наконец выполняется вызов
</span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_setspecific</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'>, который связывает значение </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>win</span></i></tt></span><span style='font-size:14.0pt'> с ключом.
После этого, как только поток вызывает </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_getspecific</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'>, передав глобальный ключ, он получает некоторое
значение. Это значение было связано с этим ключом в вызывающем потоке, когда он
вызвал функцию </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>pthread_setspecific</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'>. Когда поток заканчивается, выполняются вызовы
функций деструкторов, которые были настроены при вызове </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>pthread_key_create</span></i></tt></span><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>()</span></i><span style='font-size:
14.0pt'>. Функция деструктора вызывается, если завершившийся поток установил
значение для ключа вызовом </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>pthread_setspecific</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'>. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Функция </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_self</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> вызывается для получения </span><tt><span
style='font-size:14.0pt'>ID</span></tt><span style='font-size:14.0pt'>
вызывающего ее потока: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>tid</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>tid</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>&nbsp;=&nbsp;<span
class=SpellE>pthread_self</span>(); <o:p></o:p></span></i></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Функция </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_equal</span></i></tt></span><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>()</span></i><span style='mso-bidi-font-size:
14.0pt'> вызывается для сравнения идентификаторов двух потоков: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;tid1,&nbsp;tid2; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_equal</span>(tid1,&nbsp;tid2); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span><span style='mso-bidi-font-size:
14.0pt'>Как и другие функции сравнения, </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_equal</span></i></tt></span><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>()</span></i><span style='mso-bidi-font-size:
14.0pt'> возвращает значение, отличное от нуля, когда </span><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>tid1</span></i></tt><span style='mso-bidi-font-size:14.0pt'> и </span><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>tid2</span></i></tt><span style='mso-bidi-font-size:14.0pt'> равны;
иначе возвращается 0. Если </span><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>tid1</span></i></tt><span
style='mso-bidi-font-size:14.0pt'> или </span><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>tid2</span></i></tt><span
style='mso-bidi-font-size:14.0pt'> - недействительный идентификатор потока,
результат функции будет неопределенным. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Функция<i style='mso-bidi-font-style:
normal'> </i></span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_once</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> используется для вызова процедуры инициализации
потока только один раз. Последующие вызовы не оказывают никакого эффекта.
Пример вызова функции: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-tab-count:1'>          </span><span
class=SpellE><i style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:
14.0pt'>int</span></i></span><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>&nbsp;<span class=SpellE>pthread_once</span>(<span
class=SpellE>pthread_once_t</span>&nbsp;*<span class=SpellE>once_control</span>,<span
style='mso-spacerun:yes'>  </span><span class=SpellE>void</span>&nbsp;(*<span
class=SpellE>init_routine</span>)(<span class=SpellE>void</span>)); <o:p></o:p></span></i></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>Функция </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>sched_yield</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'> приостанавливает текущий поток, чтобы
процессор переключился на другой поток с тем же самым или большим приоритетом.
Пример</span><span style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'> </span><span
style='mso-bidi-font-size:14.0pt'>вызова</span><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>sched.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>sched_yield</span>(); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><span style='mso-tab-count:1'>          </span></span><span
style='mso-bidi-font-size:14.0pt'>После успешного завершения </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>sched_yield</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>() </span></i><span
style='mso-bidi-font-size:14.0pt'>возвращает 0. Если возвращается -1, то
системная переменная<i style='mso-bidi-font-style:normal'> </i></span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>errno</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'> устанавливается на код ошибки. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'>Функция
</span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_setschedparam</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> используется, чтобы изменить приоритет существующего
потока. Эта функция никоим образом не влияет на дисциплину диспетчеризации: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-tab-count:1'>          </span><span
class=SpellE><span class=GramE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>pthread</span></span></i><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>_</span></i><span
class=SpellE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>setschedparam</span></i></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>(</span></i><span
class=SpellE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>pthread</span></i></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>_</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>t&nbsp;<span class=SpellE>tid</span></span></i><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>,</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>int</span>&nbsp;policy</span></i><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>,<span
style='mso-spacerun:yes'>  </span></span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:
EN-US'>const&nbsp;<span class=SpellE>struct</span>&nbsp;<span class=SpellE>sched</span></span></i><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>_</span></i><span
class=SpellE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>param</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>*</span></i><span class=SpellE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>param</span></i></span><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>); <o:p></o:p></span></i></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'>Использование
функции: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>#<span class=SpellE>include</span>&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>tid</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>struct</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>sched_param</span>&nbsp;<span
class=SpellE>param</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;priority; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>/*&nbsp;<span class=SpellE>sched_priority</span>&nbsp;указывает&nbsp;приоритет&nbsp;потока&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>sched_param.sched_priority</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;=&nbsp;priority; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>/*&nbsp;единственный&nbsp;поддерживаемый&nbsp;алгоритм&nbsp;диспетчера*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>policy</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>&nbsp;=&nbsp;SCHED_OTHER;
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>/*&nbsp;параметры&nbsp;диспетчеризации&nbsp;требуемого&nbsp;потока&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>ret</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>&nbsp;=&nbsp;<span
class=SpellE>pthread_setschedparam</span>(<span class=SpellE>tid</span>,&nbsp;<span
class=SpellE>policy</span>,&nbsp;&amp;<span class=SpellE>param</span>); <o:p></o:p></span></i></p>

<p class=MsoNormal><tt><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></tt></p>

<p class=MsoNormal><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'><span style='mso-tab-count:
1'>      </span><span class=SpellE>pthread_setschedparam</span></span></i></tt><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'> возвращает 0 в случае успешного завершения,
или другое значение в случае ошибки. </span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'>Функция</span><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
14.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span><span class=SpellE><span class=GramE>int</span></span>&nbsp;<span
class=SpellE>pthread_getschedparam</span>(<span class=SpellE>pthread_t</span>&nbsp;<span
class=SpellE>tid</span>,&nbsp;<span class=SpellE>int</span>&nbsp;policy, &nbsp;<span
class=SpellE>struct</span>&nbsp;<span class=SpellE>schedparam</span>&nbsp;*<span
class=SpellE>param</span>);<o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'>позволяет получить
приоритет любого существующего потока. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'>Пример
вызова функции: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>tid</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>sched_param</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>param</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;priority; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;policy</span></i><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret</span></i><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>/*</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>параметры</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>диспетчеризации</span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>нужного</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>потока</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>*/ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>=</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>pthread</span></span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>_</span></i><span
class=SpellE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>getschedparam</span></i></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>(</span></i><span class=SpellE><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>tid</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>,</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>&amp;</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>policy</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>,</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>&amp;</span></i><span class=SpellE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>param</span></i></span><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>/*&nbsp;<span class=SpellE>sched_priority</span>&nbsp;содержит&nbsp;приоритет&nbsp;потока&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>priority</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>&nbsp;=&nbsp;<span
class=SpellE>param.sched_priority</span>; <o:p></o:p></span></i></p>

<p class=MsoNormal><tt><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></tt></p>

<p class=MsoNormal><tt><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'><span
style='mso-tab-count:1'>      </span><span class=SpellE><i style='mso-bidi-font-style:
normal'>pthread_getschedparam</i></span></span></tt><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'> возвращает 0 - в случае успешного завершения
- или другое значение - в случае ошибки. </span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Поток, как и процесс, может принимать
различные сигналы: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>signal.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;sig; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>tid</span>; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_kill</span>(<span class=SpellE>tid</span>,&nbsp;sig); <o:p></o:p></span></i></p>

<p class=MsoNormal><tt><span lang=EN-US style='font-size:10.0pt;mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></tt></p>

<p class=MsoNormal style='text-align:justify'><tt><span lang=EN-US
style='font-size:10.0pt;mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>      </span></span></tt><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_kill</span></i></tt></span><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>()</span></i><span style='mso-bidi-font-size:
14.0pt'> посылает сигнал </span><span class=SpellE><tt><i style='mso-bidi-font-style:
normal'><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>sig</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'> потоку, обозначенному </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>tid</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'>, который должен быть потоком в пределах того
же самого процесса, что и вызывающий поток. Аргумент </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>sig</span></i></tt></span><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'> </span></i><span style='mso-bidi-font-size:
14.0pt'>должен быть действительным сигналом некоторого типа, определенного для
функции </span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>signal</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'> в файле </span><tt><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>&lt; <span class=SpellE>signal.h</span>&gt;</span></tt><span
style='mso-bidi-font-size:14.0pt'>. </span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Если </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
14.0pt'>sig</span></i></tt></span><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'> </span></i><span style='font-size:14.0pt'>имеет
значение 0, выполняется проверка ошибок, но сигнал реально не посылается. Таким
<span class=GramE>образом</span> можно проверить правильность<i
style='mso-bidi-font-style:normal'> </i></span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>tid</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>. </span></i><span
style='font-size:14.0pt'>Функция возвращает 0 - в случае успешного завершения -
или другое значение - в случае ошибки. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Функция
</span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_sigmask</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> может использоваться для изменения или получения
маски сигналов вызывающего потока: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'><span style='mso-tab-count:1'>          </span></span></i><span
class=SpellE><span class=GramE><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'>&nbsp;<span class=SpellE>pthread_sigmask</span>(<span
class=SpellE>int</span>&nbsp;how,&nbsp;const&nbsp;<span class=SpellE>sigset_t</span>&nbsp;*new,<span
style='mso-spacerun:yes'>  </span><span class=SpellE>sigset_t</span>&nbsp;*old);
<o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'>Пример вызова
функции: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>signal.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>sigset_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;old,&nbsp;new; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;/*&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>установка</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>новой</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>маски</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;*/ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_sigmask</span>(SIG_SETMASK,&nbsp;&amp;new,&nbsp;&amp;old);
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;/*&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>блокирование</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>маски</span></i><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;*/ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_sigmask</span>(SIG_BLOCK,&nbsp;&amp;new,&nbsp;&amp;old); <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;/*&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>снятие</span></i><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;</span></i><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>блокировки</span></i><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;*/
<o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_sigmask</span>(SIG_UNBLOCK,&nbsp;&amp;new,&nbsp;&amp;old);
<o:p></o:p></span></i></p>

<p class=MsoNormal><tt><span lang=EN-US style='font-size:10.0pt;mso-bidi-font-size:
14.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></tt></p>

<p class=MsoNormal><tt><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:10.0pt;mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>      </span></span></i></tt><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>how</span></i></tt></span><span style='mso-bidi-font-size:14.0pt'>
определяет режим смены маски. Он принимает значения следующих констант: </span></p>

<p class=MsoNormal><strong><o:p>&nbsp;</o:p></strong></p>

<p class=MsoNormal><strong><span style='mso-bidi-font-size:14.0pt'>SIG_SETMASK</span></strong><span
style='mso-bidi-font-size:14.0pt'><span style='mso-spacerun:yes'>  </span>-
заменяет текущую маску сигналов новой, при этом </span><span class=SpellE><tt><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>new</span></tt></span><span
style='mso-bidi-font-size:14.0pt'> указывает новую маску сигналов; <strong><span
style='font-weight:normal'><o:p></o:p></span></strong></span></p>

<p class=MsoNormal><strong><span style='mso-bidi-font-size:14.0pt'>SIG_BLOCK</span></strong><span
style='mso-bidi-font-size:14.0pt'><span style='mso-spacerun:yes'>  </span>-
добавляет новую маску сигналов к <span class=GramE>текущей</span>, при этом </span><span
class=SpellE><tt><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>new</span></tt></span><span
style='mso-bidi-font-size:14.0pt'> указывает множество блокируемых сигналов; <strong><span
style='font-weight:normal'><o:p></o:p></span></strong></span></p>

<p class=MsoNormal><strong><span style='mso-bidi-font-size:14.0pt'>SIG_UNBLOCK</span></strong><span
style='mso-bidi-font-size:14.0pt'><span style='mso-spacerun:yes'>  </span>-
удаляет </span><span class=SpellE><tt><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>new</span></tt></span><span style='mso-bidi-font-size:14.0pt'> из
текущей маски сигналов, при этом </span><span class=SpellE><tt><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>new</span></tt></span><span
style='mso-bidi-font-size:14.0pt'> указывает множество сигналов для снятия
блокировки. </span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
14.0pt'><span style='mso-tab-count:1'>          </span>Если значение<i
style='mso-bidi-font-style:normal'> </i></span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>new</span></i></tt></span><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'> </span></i><span style='mso-bidi-font-size:
14.0pt'>равно </span><tt><span style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>NULL</span></tt><span
style='mso-bidi-font-size:14.0pt'>, то значение<i style='mso-bidi-font-style:
normal'> </i></span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>how</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'> не играет роли, и маска сигналов потока не
изменяется. Чтобы узнать о блокированных в данный момент сигналах, аргумент </span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>new</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'> устанавливают в </span><tt><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>NULL</span></tt><span
style='mso-bidi-font-size:14.0pt'>. Переменная </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>old</span></i></tt></span><span style='mso-bidi-font-size:14.0pt'>
указывает, где хранится прежняя маска сигналов, если ее значение не равно </span><tt><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>NULL</span></tt><span
style='mso-bidi-font-size:14.0pt'>. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Функция </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_sigmask</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> возвращает 0 - в случае успешного завершения - или
другое значение - в случае ошибки. <o:p></o:p></span></p>

<h1 style='margin:0cm;margin-bottom:.0001pt'><a
name=SECTION02880000000000000000><span style='font-size:14.0pt;font-family:
"Times New Roman";font-weight:normal;mso-bidi-font-weight:bold;mso-no-proof:
yes'><span style='mso-tab-count:1'>          </span><o:p></o:p></span></a></h1>

<p class=MsoNormal><span style='mso-bookmark:SECTION02880000000000000000'><span
style='mso-no-proof:yes'><span style='mso-tab-count:1'>          </span>5.1.8 </span>Остановка
потока</span> </p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt;text-align:justify'><span
style='font-size:14.0pt'><span style='mso-tab-count:1'>          </span>Поток
может прерваться несколькими способами. Первый способ предполагает возвращение
управления из основной процедуры потока </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>start_routine</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>.</span></i><span
style='font-size:14.0pt'> Второй способ - вызов </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_exit</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'>, возвращающий статус выхода. Третий способ -
прерывание потока с помощью функции </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_cancel</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'>. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Функция </span><span class=SpellE><code><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>void</span></i></code></span><code><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'> <span
class=SpellE>pthread_exit</span>(<span class=SpellE>void</span> *<span
class=SpellE>status</span>)</span></i></code><span style='font-size:14.0pt'>
прерывает выполнение потока точно так же, как функция<i style='mso-bidi-font-style:
normal'> </i></span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>exit</span></i></tt></span><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt'>()</span></i><span style='font-size:
14.0pt'> прерывает процесс: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;status; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;</span></i><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>/*&nbsp;выход&nbsp;возвращает&nbsp;статус&nbsp;<span
class=SpellE>status</span>&nbsp;*/ <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>pthread_exit</span></i></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>(&amp;<span
class=SpellE>status</span>); <o:p></o:p></span></i></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Функция </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_exit</span></i></tt></span><i style='mso-bidi-font-style:normal'><span
style='mso-bidi-font-size:14.0pt'>() </span></i><span style='mso-bidi-font-size:
14.0pt'>заканчивает выполнение вызвавшего ее потока. Все привязки данных для
этого потока освобождаются. Если вызывающий поток не отделен, то </span><tt><span
style='font-size:10.0pt;mso-bidi-font-size:14.0pt'>ID</span></tt><span
style='mso-bidi-font-size:14.0pt'> этого потока и статус выхода (</span><span
class=SpellE><tt><i style='mso-bidi-font-style:normal'><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>status</span></i></tt></span><span
style='mso-bidi-font-size:14.0pt'>) сохраняются, пока поток блокирован. В
противном случае, статус игнорируется, а </span><tt><span style='font-size:
10.0pt;mso-bidi-font-size:14.0pt'>ID</span></tt><span style='mso-bidi-font-size:
14.0pt'> потока может быть немедленно использован для другого потока. <o:p></o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span style='font-size:14.0pt'><span
style='mso-tab-count:1'>          </span>Функция<i style='mso-bidi-font-style:
normal'> </i></span><span class=SpellE><tt><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt'>pthread_cancel</span></i></tt></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt'>()</span></i><span
style='font-size:14.0pt'> предназначена для прерывания потока: <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:14.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'>#include&nbsp;&lt;<span
class=SpellE>pthread.h</span>&gt; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>pthread_t</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;thread; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=SpellE><span
class=GramE><i style='mso-bidi-font-style:normal'><span lang=EN-US
style='font-size:14.0pt;mso-ansi-language:EN-US'>int</span></i></span></span><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>&nbsp;ret; <o:p></o:p></span></i></p>

<p style='margin:0cm;margin-bottom:.0001pt'><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:14.0pt;
mso-ansi-language:EN-US'>ret</span></i></span><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>&nbsp;=&nbsp;<span
class=SpellE>pthread_cancel</span>(thread); <o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:14.0pt;
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='mso-bidi-font-size:14.0pt;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>          </span></span><span style='mso-bidi-font-size:
14.0pt'>Способ обработки запроса на прерывание потока зависит от состояния
указанного потока. Две функции, </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_setcancelstate</span></i></tt></span><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'> и </span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_setcanceltype</span></i></tt></span><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>()</span></i><span
style='mso-bidi-font-size:14.0pt'>, определяют это состояние; функция<i
style='mso-bidi-font-style:normal'> </i></span><span class=SpellE><tt><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;mso-bidi-font-size:
14.0pt'>pthread_cancel</span></i></tt></span><i style='mso-bidi-font-style:
normal'><span style='mso-bidi-font-size:14.0pt'>() </span></i><span
style='mso-bidi-font-size:14.0pt'>возвращает 0 в случае успешного завершения,
или другое значение в случае ошибки.<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
